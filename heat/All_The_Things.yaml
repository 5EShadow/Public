heat_template_version: 2016-10-14

description: Linux Web_Server Spawn Script
 
parameters:

  server_id:
    type: string
    label: Server ID
    description: Server ID Number with No Leading Zeros

  server_name:
    type: string
    label: Server Name
    description: Server Name
    default:
    constraints:
      -  length: { min: 1, max: 15 }
         description: Server name must be no longer than 15 characters
      -  allowed_pattern: "[a-zA-Z]*"
         description: Server name may only contain letters
  
  AdminPassword:
    type: string
    label: Root Password
    description: root and admin password
    hidden: true
    default: password
    constraints:
      -  length: { min: 8, max: 20 }
         description: Password must be between 8 and 20 characters
      -  allowed_pattern: "[a-zA-Z0-9]*"
         description: Password may not contain special characters

resources:

  server_network:
    type: OS::Neutron::Net
    properties:
      name: server_network
      admin_state_up: true
         
      
  server_subnet:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
        - start:
            str_replace:
              template: 10.serverID.0.200
              params:
                serverID: { get_param: server_id }
          end:
            str_replace:
              template: 10.serverID.0.250
              params:
                serverID: { get_param: server_id }
      cidr:
        str_replace:
          template: 10.serverID.0.0/24
          params:
            serverID: { get_param: server_id }
      gateway_ip:
        str_replace:
          template: 10.serverID.0.254
          params:
            serverID: { get_param: server_id }
      network: { get_resource: network0 }
      dns_nameservers: [10.50.255.254]
      name:
        str_replace:
          template: servername_subnet
          params:
            servername: { get_param: server_name }
        
  server-router:
    type: OS::Neutron::Router    
    properties:
      name:
        str_replace:
          template: servername_router
          params:
            servername: { get_param: server_name }
      external_gateway_info: {"network": public}
        
  server-router-interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: server-router }       
      subnet_id: { get_resource: server_subnet }
      
  float_ip_1:
    type: OS::Neutron::FloatingIP
    depends_on: server-router
    properties: { floating_network: public }

  float_port_1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: server-network }
      fixed_ips:
        - subnet_id: { get_resource: server-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.99
              params:
                studentID: { get_param: server_id }
      port_security_enabled: false
      
  float_ip_assoc_1:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: float_ip_1 }
      port_id: { get_resource: float_port_1 }
                          
  host1:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: All_The_Things
          params:
            lastname: { get_param: server_name }
      image: Debian LXDE
      flavor: cy.medium
      networks: 
        - port: { get_resource: host1-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            echo 173.230.138.130 git.cybbh.space >> /etc/host
            useradd -m -G sudo zeus
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            pkg_array=({install,locate,dnsutils,lsof,aptitude,auditd,git,zip,unzip,figlet,hexedit,tree,apache2,gcc,tcc,build-essential,libreadline-dev,libssl-dev,libpq5,libpq-dev,libreadline5,libsqlite3-dev,libpcap-dev,git-core,autoconf,pgadmin3,curl,zlib1g-dev,libxml2-dev,libxslt1-dev,libyaml-dev,nmap,python-setuptools,python-dev,build-essential,netcat,firefox})
            for x in ${pkg_array[@]}; do apt-get install -y $x; done
            apt-get upgrade
            updatedb
            mandb
            service apache2 start
            mkdir /root/GIT
            mkdir -P /var/www/html/{linux,heat,windows,networking,BASH,WOBC}            
            git clone https://github.com/D4NP0UL1N/Public.git /root/GIT
            #
            #---Linux Binaries
            mkdir -P /var/www/html/linux/.hidden/
            find /root/GIT/linux -type f -exec cp {} /var/www/html/linux/ \;            
            wget https://www.dropbox.com/s/5ygjn9vs99gnfy8/fun.vdi?dl=0 -O /var/www/html/linux/fun.vdi            
            mkdir /rootkits
            git clone https://github.com/D4NP0UL1N/0010100010.git /rootkits
            echo 0 > /proc/sys/kernel/randomize_va_space
            gcc -o /var/www/html/linux/sudo_bad /rootkits/sudo.c 2>/dev/null
            rm /rootkits/README.md
            zip /var/www/html/linux/rootkits.zip /rootkits/*
            chmod +x /var/www/html/linux/*
            #
            #---BASH Binaries
            mkdir -P /var/www/html/BASH/FINAL            
            find /root/GIT/BASH/ -maxdepth 1 -type f -exec cp {} /var/www/html/BASH/ \;
            find /root/GIT/BASH/FINAL -maxdepth 1 -type f -exec cp {} /var/www/html/BASH/FINAL/ \;                       
            #
            #---Windows Binaries
            mkdir -P /var/www/html/windows/.hidden/{DD,TTW}
            find /root/GIT/windows -type f -exec cp {} /var/www/html/windows/ \;
            find /root/GIT/AD -type f -exec cp {} /var/www/html/windows/.hidden/DD/ \;
            find /root/GIT/TTW -type f -exec cp {} /var/www/html/windows/.hidden/TTW/ \;
            find /root/GIT/heat/KB.ps1 -type f -exec cp {} /var/www/html/windows/.hidden/ \;
            #
            #---Networking Binaries
            find /root/GIT/networking -type f -exec cp {} /var/www/html/networking/ \;
            #
            #---PowerShell Binaries
            find /root/GIT/PoSH -type f -exec cp {} /var/www/html/PoSH/ \;
            #
            #---Heat YAML files
            find /root/GIT/heat -type f ! -name "All_The_Things.yaml" -a ! -name "KB.ps1" -exec cp {} /var/www/html/heat/ \;            
            bash
            #User accounts
            sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/#Port 22/Port 22/' /etc/ssh/sshd_config
            service ssh restart
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            echo "$user:$password" | chpasswd
            echo "zeus:$password" | chpasswd
            echo "root:$password" | chpasswd
            reboot
          params:
            $user: { get_param: server_name }
            $password: { get_param: AdminPassword }
      user_data_format: RAW
