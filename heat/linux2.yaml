heat_template_version: 2017-02-24

description: Heat Template for Linux Exploitation module of CCTC

parameters:

  student_id:
    type: string
    label: Student ID
    description: Student ID Number with No Leading Zeros

  last_name:
    type: string
    label: Last Name
    description: Last Name
    default:
    constraints:
      -  length: { min: 1, max: 15 }
         description: Last name must be no longer than 15 characters
      -  allowed_pattern: "[a-zA-Z]*"
         description: Last name may only contain letters

  password:
    type: string
    label: Password
    description: Set root/admin password for instances
    hidden: true
    default: password
    constraints:
      -  length: { min: 8, max: 20 }
         description: Password must be between 8 and 20 characters
      -  allowed_pattern: "[a-zA-Z]*"
         description: Password may not contain special characters

resources:

  stu-network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: lastName_Network
          params:
            lastName: { get_param: last_name }

  stu-subnet:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
        - start:
            str_replace:
              template: 10.studentID.0.200
              params:
                studentID: { get_param: student_id }
          end:
            str_replace:
              template: 10.studentID.0.250
              params:
                studentID: { get_param: student_id }
      cidr:
        str_replace:
          template: 10.studentID.0.0/24
          params:
            studentID: { get_param: student_id }
      gateway_ip:
        str_replace:
          template: 10.studentID.0.254
          params:
            studentID: { get_param: student_id }
      network: { get_resource: stu-network }
      dns_nameservers: [10.50.255.254]
      name:
        str_replace:
          template: lastname_subnet
          params:
            lastname: { get_param: last_name }

  stu-router:
    type: OS::Neutron::Router    
    properties:
      name:
        str_replace:
          template: lastname_router
          params:
            lastname: { get_param: last_name }
      external_gateway_info: {"network": public}

  stu-router-interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: stu-router }       
      subnet_id: { get_resource: stu-subnet }

  host1-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.11
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host1:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: Debian 16.04
          params:
            lastname: { get_param: last_name }
      image: Debian 16.04
      flavor: cy.medium
      networks: 
        - port: { get_resource: host1-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash            
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            pkg_array=({install,locate,dnsutils,lsof,aptitude,ftp,auditd,telnet,samba,git,zip,unzip,figlet,hexedit,tree,apache2,gcc,tcc,build-essential,libreadline-dev,libssl-dev,libpq5,libpq-dev,libreadline5,libsqlite3-dev,libpcap-dev,git-core,autoconf,pgadmin3,curl,zlib1g-dev,libxml2-dev,libxslt1-dev,libyaml-dev,nmap,python-setuptools,python-dev,build-essential,netcat,scp,libapache2-modsecurity,firefox})
            for x in ${pkg_array[@]}; do apt-get install -y $x; done
            apt-get -y upgrade
            updatedb
            mandb
            sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's/#Port 22/Port 22/' /etc/ssh/sshd_config 2>/dev/null
            service ssh restart
            # Debian 16.04 Apache2 security.conf settings
            sed -i 's/ServerTokens OS/ServerTokens Full/' /etc/apache2/conf-available/security.conf
            sed -i 's/TraceEnable Off/TraceEnable On/' /etc/apache2/conf-available/security.conf
            service apache2 restart
            useradd $user -m -U -s /usr/sbin/nologin
            useradd Eeyore -m -U -s /bin/rbash -G sudo -p hatemyjob
            useradd zeus -m -U -s /bin/rbash -p PassWord1234!!
            useradd Bill -m -U -s /bin/bash -G sudo -p DoDC0mPL1antPassW0rd!! /y
            useradd Susan -m -U -s /bin/sh -p "Susan+Cats"
            useradd alice -m -U -s /bin/bash -c "The one and only"
            useradd bob -m -U -s /bin/bash -G alice
            useradd charlie -m -U -s /bin/bash 
            useradd dan -m -U -s /bin/bash
            useradd eve -m -M -N -s /bin/bash 
            useradd frank -m -U -s /bin/bash
            useradd grant -m -U -s /usr/sbin/nologin 
            useradd howard -m -U -s /bin/bash 
            useradd ian -m -U -s /bin/bash -G sudo,alice
            useradd milton -m -U -s /bin/bash -c "gardian of the company septor" -G sudo
            useradd janice -m -U -s /bin/bash -G milton
            useradd morpheus -m -U -s /bin/bash -c "Looking for the ONE" -G dan
            useradd smegel -m -U -s /bin/bash -c "has the precious" -G sudo
            useradd peter -m -U -s /bin/bash
            useradd lisa -m -U -s /usr/sbin/nologin
            useradd tommy -m -U -s /bin/bash
            useradd ernie -m -U -s /bin/bash -G bert
            useradd bert -m -U -s /usr/sbin/nologin
            useradd thor -m -U -s /bin/bash -G lisa
            useradd charlene -m -U -s /usr/sbin/nologin
            echo "alice:password123456" | chpasswd
            echo "bob:password123!!!" | chpasswd
            echo "charlie:passwordqwerty" | chpasswd -c SHA256
            echo "dan:passwordqazxsw" | chpasswd
            echo "eve:PassworD" | chpasswd -c SHA256
            echo "frank:password!1!1!" | chpasswd
            echo "grant:passwordPaSsWoRd" | chpasswd
            echo "howard:eve" | chpasswd
            echo "ian:password" | chpasswd -c SHA256
            echo "janice:passwordthatislong" | chpasswd
            echo "morpheus:neo" | chpasswd
            echo "smegel:ring" | chpasswd
            echo "peter:parker" | chpasswd
            echo "lisa:HeartBill" | chpasswd
            echo "tommy:PassworD" | chpasswd -c SHA256
            echo "ernie:bert" | chpasswd
            echo "bert:ernie" | chpasswd
            echo "thor:password" | chpasswd
            echo "charlene:passwordpasswordpassword" | chpasswd 
            echo "milton:stapler" | chpasswd
            for x in {eve,morpheus,frank}; do passwd -l $x; done
            passwd -d Eeyore
            for x in {Eeyore,Bill,Susan,zeus,milton,charlene,thor,bert,ernie,tommy,lisa,peter,smegel,morpheus,janice,ian,howard,grant,frank,eve,dan,charlie,bob,alice,susan}; do ln -s /home/$x /var/www/html/files/$x; done
            ln -s /etc/shadow /var/www/html/files/frodo
            mkdir -P /home/Eeyore/Desktop && chown Eeyore:Eeyore /home/Eeyore/Desktop
            wget https://github.com/danielmiessler/SecLists/blob/master/Passwords/rockyou-75.txt -O /home/Eeyore/Desktop/password.lst
            echo "root:QWERTY" | chpasswd
            reboot
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW

  host2-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.12
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host2:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: Windows-7
          params:
            lastname: { get_param: last_name }
      image: Windows 7
      flavor: cy.large
      networks: 
        - port: { get_resource: host2-port }
      user_data: 
        str_replace:
          template: |
            #ps1_sysnative
            $ErrorActionPreference = 'SilentlyContinue'
            netsh advfirewall set allprofiles state off
            # set-ItemProperty -Path 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System' -name "dontdisplaylastusername" -Value 1
            net user /add Bill DoDC0mPL1antPassW0rd!! /y
            net localgroup administrators /add Bill
            net user /add Susan Susan+Cats /y
            net user /add Robert PassWord123 /y
            net user /add Jacob UberL0ngPassw0rdNo0neW1llEverGuessHaHaHa
            net user /add Eeyore hatemyjob /y
            net user /add Ian password /y
            net localgroup administrators /add Eeyore
            net user /add $user $password /y
            Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
            #Invoke-WebRequest -Uri "10.50.25.121/.hidden/KB.ps1" -OutFile "C:\windows\system32\KB.ps1"
            (new-object System.Net.WebClient).DownloadFile( "http://10.50.25.121/heat/KB.ps1","C:\windows\system32\KB.ps1" )
            Set-ItemProperty "HKLM:\Software\Microsoft\Windows\CurrentVersion\RunOnce" -name "KB" 'C:\WINDOWS\system32\WindowsPowerShell\v1.0\powershell.exe -noprofile -sta -File "C:\windows\system32\KB.ps1"'
            #New-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update" -Name AUOptions -Value 1 -PropertyType Dword | Out-Null
            #get-service wuauserv | stop-service -Force
            exit 1001
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW

  host3-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.13
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host3:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: Ubuntu
          params:
            lastname: { get_param: last_name }
      image: Ubuntu 16.04
      flavor: cy.small
      networks: 
        - port: { get_resource: host3-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash            
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            apt-get update
            pkg_array=({install,locate,dnsutils,lsof,aptitude,vsftpd,auditd,telnet,samba,git,zip,unzip,figlet,hexedit,tree,apache2,gcc,tcc,build-essential,libreadline-dev,libssl-dev,libpq5,libpq-dev,libreadline5,libsqlite3-dev,libpcap-dev,git-core,autoconf,postgresql,pgadmin3,curl,zlib1g-dev,libxml2-dev,libxslt1-dev,libyaml-dev,nmap,python-setuptools,python-dev,build-essential,hydra,hydra-gtk,john,xrdp,netcat,libapache2-modsecurity,firefox,ubuntu_desktop})
            for x in ${pkg_array[@]}; do apt-get install -y $x; done
            apt-get -y upgrade
            updatedb
            mandb
            mkdir /etc/banners
            useradd $user -m -U -s /bin/bash
            useradd -m Eeyore -U -s /bin/bash -G sudo -p hatemyjob
            useradd -m zeus -U -s /bin/rbash -p PassWord1234!!
            useradd -m Bill -U -s /bin/bash -G sudo -p DoDC0mPL1antPassW0rd!! /y
            useradd -m Susan -U -s /bin/sh -p "Susan+Cats" -c "password-Susan+Cats"
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config
            sed -i 's+#Banner /etc/issue.net+Banner /etc/banners/ssh-banner-msg.txt+' /etc/ssh/sshd_config
            cat >> /etc/banners/ssh-banner-msg.txt <<"__EOF__"
            
            For Technical Support or Password/Key Resets:
            Contact: 
            
              Bill Price [> Admin Support <]         ৫(”ړ৫)˒˒˒˒
              billp@nvrgonurydths.org
              1-800-TEH-HAND
              twitter:  @r00tm3
              Website: goo.gl/9GGCae
            
            __EOF__
            service ssh restart
            sed -i 's/anonymous_enable=NO/anonymous_enable=YES/' /etc/vsftpd.conf
            sed -i 's/#write_enable=YES/write_enable=YES/' /etc/vsftpd.conf
            sed -i 's/#anon_mkdir_write_enable=YES/anon_mkdir_write_enable=YES/' /etc/vsftpd.conf
            sed -i 's/#anon_upload_enable=YES/anon_upload_enable=YES/' /etc/vsftpd.conf
            sed -i 's/#anon_upload_enable=YES/anon_upload_enable=YES/' /etc/vsftpd.conf
            sed -i 's/#chown_uploads=YES/chown_uploads=YES/' /etc/vsftpd.conf
            sed -i 's/#chown_username=whoever/chown_username=whoever/' /etc/vsftpd.conf
            sed -i 's+#ftpd_banner=Welcome to blah FTP service+ftpd_banner=/etc/banners/ftp-banner-msg.txt+' /etc/vsftpd.conf
            sed -i 's/#ls_recurse_enable=YES/ls_recurse_enable=YES/' /etc/vsftpd.conf
            cat >> /etc/banners/ftp-banner-msg.txt <<"__EOF__"
            
                        vsFTPd Ver. 3.0.3-8 "classical file transfer client"
            
            #### Be sure to alter your /etc/vsftpd.conf file from default security settings 
                 to prevent unauthorized access and/or modification to the system           ####
            
            __EOF__
            service vsftpd restart
            reboot
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW
      

  host4-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.14
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false


  host4:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: Windows-10
          params:
            lastname: { get_param: last_name }
      image: Windows 10
      flavor: cy.large
      networks:
        - port: { get_resource: host4-port }
      user_data:
        str_replace:
          template: |
            #ps1_sysnative
            $ErrorActionPreference = 'SilentlyContinue'
            netsh advfirewall set allprofiles state off
            set-ItemProperty -Path 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System' -name "dontdisplaylastusername" -Value 1
            (new-object System.Net.WebClient).DownloadFile('https://download.mozilla.org/?product=firefox-48.0.2-SSL&os=win64&lang=en-US','C:\firefox.exe')
            & c:\firefox.exe -ms
            (new-object System.Net.WebClient).DownloadFile('https://notepad-plus-plus.org/repository/6.x/6.9.2/npp.6.9.2.Installer.exe','C:\npp.exe')
            & c:\npp.exe /S
            (new-object System.Net.WebClient).DownloadFile('https://the.earth.li/~sgtatham/putty/latest/x86/putty-0.67-installer.msi','C:\putty.msi')
            & msiexec /i c:\putty.msi /quiet /passive
            (new-object System.Net.WebClient).DownloadFile('http://download.documentfoundation.org/libreoffice/stable/5.4.2/win/x86_64/LibreOffice_5.4.2_Win_x64.msi','C:\LibreOffice.msi')
            & msiexec /i c:\LibreOffice.msi /quiet /passive
            (new-object System.Net.WebClient).DownloadFile('http://10.50.25.121/windows/.hidden/Disorderly_Domain/PsExec.exe','C:\Users\Bill\Documents\psexec.exe')
            Set-ExecutionPolicy -ExecutionPolicy Unrestricted -Force
            #
            #----alters GPO so Administrator can access web
            secedit /export /cfg c:\secpol.cfg
            (gc C:\secpol.cfg).replace("MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\ScForceOption=4,0", "MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\FilterAdministratorToken=4,1") | Out-File -File C:\secpol.cfg
            secedit /configure /db c:\windows\security\local.sdb /cfg c:\secpol.cfg
            rm -force c:\secpol.cfg -confirm:$false
            #
            #----alters UIPI key so Administrator can acces web
            Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" -name "UIPI" -value "0x00000001(1)"
            #
            net user Admin P@$$Word /y
            net user /add Bill DoDC0mPL1antPassW0rd!! /y
            net user /add Robert PassWord123 /y
            net user /add Susan Susan+Cats /y
            net user /add Lisa HeartBill /y
            net user /add zeus PassWord1234!! /y
            net user /add Ian password /y
            net localgroup administrators /add Ian
            net user administrator notgonnahappen /y
            net user administrator /active:yes
            Set-ItemProperty "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\" -name "UIPI" -Value "0x00000001(1)"
            Write-Output "YAHTZEE" -n > C:\Users\administrator\Desktop\msg.txt
            exit 1001
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW

  host5-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.15
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host5:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: Kali 2.0
          params:
            lastname: { get_param: last_name }
      image: Kali2
      flavor: cy.medium
      networks:
        - port: { get_resource: host5-port }
