heat_template_version: 2016-10-14

description: Heat Template for BASH module of 17C CCTC - Provides base resources and Debian LXDE system

parameters:

  student_id:
    type: string
    label: Student ID
    description: Student ID Number with No Leading Zeros

  last_name:
    type: string
    label: Last Name
    description: Last Name
    default:
    constraints:
      -  length: { min: 1, max: 15 }
         description: Last name must be no longer than 15 characters
      -  allowed_pattern: "[a-zA-Z]*"
         description: Last name may only contain letters

  password:
    type: string
    label: Password
    description: Set root/admin password for instances
    hidden: true
    default: password
    constraints:
      -  length: { min: 8, max: 20 }
         description: Password must be between 8 and 20 characters
      -  allowed_pattern: "[a-zA-Z0-9]*"
         description: Password may not contain special characters

resources:

  stu-network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: lastName_Network
          params:
            lastName: { get_param: last_name }

  stu-subnet:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
        - start:
            str_replace:
              template: 10.studentID.0.200
              params:
                studentID: { get_param: student_id }
          end:
            str_replace:
              template: 10.studentID.0.250
              params:
                studentID: { get_param: student_id }
      cidr:
        str_replace:
          template: 10.studentID.0.0/24
          params:
            studentID: { get_param: student_id }
      gateway_ip:
        str_replace:
          template: 10.studentID.0.254
          params:
            studentID: { get_param: student_id }
      network: { get_resource: stu-network }
      dns_nameservers: [10.50.255.254]
      name:
        str_replace:
          template: lastname_subnet
          params:
            lastname: { get_param: last_name }

  stu-router:
    type: OS::Neutron::Router    
    properties:
      name:
        str_replace:
          template: lastname_router
          params:
            lastname: { get_param: last_name }
      external_gateway_info: {"network": public}

  stu-router-interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: stu-router }       
      subnet_id: { get_resource: stu-subnet }

  host1-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.1
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host1:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: lastname-Debian-GUI
          params:
            lastname: { get_param: last_name }
      image: Debian LXDE
      flavor: cy.medium
      networks: 
        - port: { get_resource: host1-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash            
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install locate dnsutils lsof aptitude ftp auditd telnet figlet hexedit tree
            apt-get -y install locate dnsutils lsof aptitude ftp auditd telnet figlet hexedit tree
            updatedb
            mandb
            wget https://raw.githubusercontent.com/D4NP0UL1N/Public/master/bash.sh -O /usr/share/misc/BASH.sh
            chmod +x /usr/share/misc/BASH.sh
            wget 10.50.20.28/downloads/linux/NMAP_all_hosts.txt -O /usr/share/misc/NMAP.txt
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            echo "root:$password" | chpasswd
            echo "$user:$password" | chpasswd
            #----  BASH.sh starts: ----
            mkdir /SHARED
            mkdir $HOME/{FIND,PASS,STATS,HASHES,SSH,FILES,ZIP,TERM,BIN,SBIN,SSH,PING,IP,HOME,EXP,USER,SED,CUT}
            touch $HOME/FIND/{1,2,3,4,5}.txt
            touch $HOME/FIND/{6,7,8,9,0}~.txt
            echo "12345" | md5sum | awk '{print $1}' > $HOME/ZIP/file2
            echo "54321" | md5sum | awk '{print $1}' > $HOME/ZIP/file1
            echo "54321" | md5sum | awk '{print $1}' > $HOME/ZIP/file3
            #---- copies 4100+ files ----
            find /{bin,sbin} -maxdepth 1 -type f -exec cp {} $HOME/BIN 2>/dev/null \;
            find /usr/{bin,sbin} -maxdepth 1 -type f -exec cp {} $HOME/BIN 2>/dev/null \;
            #--- stomp.sh: randomly stomps "3" files ----
            mkdir /root/PASS
            touch /root/PASS/stomp.sh
            chmod +x /root/PASS/stomp.sh
            echo '#!/bin/bash' > /root/PASS/stomp.sh
            echo 'N=3' > /root/PASS/stomp.sh
            echo 'ls $HOME/{BIN,SBIN} | sort -R | tail -$N | \ ' > /root/PASS/stomp.sh
            echo 'while read file;' > /root/PASS/stomp.sh
            echo '	do touch $HOME/{BIN,SBIN}/$file;' > /root/PASS/stomp.sh
            echo '	chmod +x $HOME/{BIN,SBIN}/$file;' > /root/PASS/stomp.sh
            echo 'done' > /root/PASS/stomp.sh
            #---- kill.sh: removes script: stomp.sh, so that it only runs once, and appears only once in the logs ----
            touch /root/PASS/kill.sh
            chmod +x /root/PASS/kill.sh    
            echo '#!/bin/bash' > /root/PASS/kill.sh
            echo '	mv $HOME/PASS/stomp.sh /dev/null' > /root/PASS/kill.sh
            #---- activates random timestomp for 3 of the $HOME/BIN/<files> ----
            echo '*/5 * * * * root /bin/bash /root/PASS/stomp.sh' >> /var/spool/cron/crontabs/root
            #---- deletes timestomp script: stomp.sh, so it only runs ONCE ----
            echo '*/7 * * * * root /bin/bash /root/PASS/kill.sh' >> /var/spool/cron/crontabs/root
            #---- adds users : LARRY, CURLY, MOE ----
            for x in {LARRY,CURLY,MOE}; do
            useradd -M $x;
            echo "$x:password" | chpasswd;
            done
            #---- generates IP addresses for activity: IPs in bash_history ----
            touch /root/list
            for a in {1..3}; do
            for y in {1..3}; do
            for x in {1..100}; do
            dd if=/dev/urandom bs=4 count=1 2>/dev/null \
            | od -An -tu1 | sed -e 's/^ *//' -e 's/  */./g' >> /root/list;
            done;
            done
            N=100
            for z in {1..10}; do
            cat list | sort -R | tail -$N >> /root/list;
            done;
            done
            touch $HOME/USER/.bash_history
            cat /root/list >> $HOME/USER/.bash_history
            #---- inject .cn IP address for students to find ----
            for b in {1..1000}; do
            echo "58.30.214.99" >> $HOME/USER/.bash_history;
            done
            sleep 1
            rm -f /root/list
            reboot
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW
