heat_template_version: 2016-10-14

description: Heat Template for Linux module of CCTC - Provides base resources and Debian LXDE system

parameters:

  student_id:
    type: string
    label: Student ID
    description: Student ID Number with No Leading Zeros

  last_name:
    type: string
    label: Last Name
    description: Last Name
    default:
    constraints:
      -  length: { min: 1, max: 15 }
         description: Last name must be no longer than 15 characters
      -  allowed_pattern: "[a-zA-Z]*"
         description: Last name may only contain letters

  password:
    type: string
    label: Password
    description: Set root/admin password for instances
    hidden: true
    default: password
    constraints:
      -  length: { min: 8, max: 20 }
         description: Password must be between 8 and 20 characters
      -  allowed_pattern: "[a-zA-Z0-9]*"
         description: Password may not contain special characters

resources:

  stu-network:
    type: OS::Neutron::Net
    properties:
      name:
        str_replace:
          template: lastName_Network
          params:
            lastName: { get_param: last_name }

  stu-subnet:
    type: OS::Neutron::Subnet
    properties:
      allocation_pools:
        - start:
            str_replace:
              template: 10.studentID.0.200
              params:
                studentID: { get_param: student_id }
          end:
            str_replace:
              template: 10.studentID.0.250
              params:
                studentID: { get_param: student_id }
      cidr:
        str_replace:
          template: 10.studentID.0.0/24
          params:
            studentID: { get_param: student_id }
      gateway_ip:
        str_replace:
          template: 10.studentID.0.254
          params:
            studentID: { get_param: student_id }
      network: { get_resource: stu-network }
      dns_nameservers: [10.50.255.254]
      name:
        str_replace:
          template: lastname_subnet
          params:
            lastname: { get_param: last_name }

  stu-router:
    type: OS::Neutron::Router    
    properties:
      name:
        str_replace:
          template: lastname_router
          params:
            lastname: { get_param: last_name }
      external_gateway_info: {"network": public}

  stu-router-interface:
    type:  OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: stu-router }       
      subnet_id: { get_resource: stu-subnet }

  host1-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.1
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host1:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: lastname-Debian-GUI
          params:
            lastname: { get_param: last_name }
      image: Debian LXDE
      flavor: cy.medium
      networks: 
        - port: { get_resource: host1-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash            
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            export DEBIAN_FRONTEND=noninteractive
            apt-get update
            apt-get -y install locate dnsutils lsof aptitude ftp auditd telnet samba git zip unzip figlet hexedit tree apache2 gcc tcc
            apt-get -y install build-essential libreadline-dev libssl-dev libpq5 libpq-dev libreadline5 libsqlite3-dev libpcap-dev git-core
            apt-get -y install autoconf postgresql pgadmin3 curl zlib1g-dev libxml2-dev libxslt1-dev vncviewer libyaml-dev curl zlib1g-dev
            apt-get -y install curl nmap wine python-setuptools python-dev build-essential hydra hydra-gtk john xrdp tigervnc-standalone-server
            apt-get -y install qemu
            updatedb
            mandb
            wget 10.50.21.22/linux/banner.sh -O /usr/share/misc/banner.sh
            chmod +x /usr/share/misc/banner.sh
            wget 10.50.21.22/linux/check.pyc -O /usr/share/misc/check.pyc
            chmod +x /usr/share/misc/check.pyc
            cat > /usr/share/misc/check_script.sh << "__EOF__"
            #!/bin/bash
            /usr/bin/env python /usr/share/misc/check.pyc
            __EOF__
            chmod +x /usr/share/misc/check_script.sh
            echo 'alias check="/usr/share/misc/check_script.sh"' >> /etc/bash.bashrc
            mkdir /usr/share/cctc
            wget 10.50.21.22/linux/runme -O /usr/share/cctc/runme
            wget 10.50.21.22/linux/page.html -O /usr/share/cctc/page.html
            wget 10.50.21.22/linux/fun.vdi -O /usr/share/cctc/fun.vdi
            wget 10.50.21.22/linux/mbroken.zip -O /usr/share/cctc/mbroken.zip
            wget 10.50.21.22/linux/mbrgood.zip -O /usr/share/cctc/mbrgood.zip
            wget 10.50.21.22/linux/NMAP_all_hosts.txt -O /usr/share/cctc/NMAP_all_hosts.txt
            wget 10.50.21.22/linux/MYSTERIOUS_FILE -O /usr/share/cctc/MYSTERIOUS_FILE
            wget 10.50.21.22/linux/sorted.zip -O /usr/share/cctc/sorted.zip
            wget 10.50.21.22/linux/rootkits.zip -O /usr/share/cctc/rootkits.zip
            wget 10.50.21.22/linux/sudo_bad -O /usr/share/cctc/sudo_bad
            wget 10.50.21.22/linux/PassCrack.zip -O /usr/share/cctc/PassCrack.zip
            wget 10.50.21.22/linux/warriors.zip -O /usr/share/cctc/warriors.zip
            chmod +x /usr/share/cctc/*
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            echo "root:$password" | chpasswd
            echo "$user:$password" | chpasswd
            
            #EXPLOITATION SETUP
            
            cat > /usr/share/misc/msf_install.sh << "__EOF__"
            #!/bin/bash
            cd /root/
            git clone git://github.com/sstephenson/rbenv.git .rbenv
            echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /root/.bashrc
            echo 'eval "$(rbenv init -)"' >> /root/.bashrc
            exec $SHELL
            git clone git://github.com/sstephenson/ruby-build.git /root/.rbenv/plugins/ruby-build
            echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> /root/.bashrc
            git clone git://github.com/dcarley/rbenv-sudo.git ~/.rbenv/plugins/rbenv-sudo
            exec $SHELL
            RUBYVERSION=$(wget https://raw.githubusercontent.com/rapid7/metasploit-framework/master/.ruby-version -q -O - )
            rbenv install $RUBYVERSION
            rbenv global $RUBYVERSION
            cd /usr/share
            sudo -s
            su postgres
            createuser temp -S -R -D
            createdb -O temp temp
            exit
            cd /opt
            sudo git clone https://github.com/rapid7/metasploit-framework.git
            sudo chown -R $(whoami) /opt/metasploit-framework
            cd metasploit-framework
            gem install bundler
            bundle install
            sudo bash -c 'for MSF in $(ls msf*); do ln -s /opt/metasploit-framework/$MSF /usr/local/bin/$MSF;done'
            touch /opt/metasploit-framework/config/database.yml
            echo "production:">/opt/metasploit-framework/config/database.yml
            echo " adapter: postgresql " >> /opt/metasploit-framework/config/database.yml
            echo " database: temp " >> /opt/metasploit-framework/config/database.yml
            echo " username: temp " >> /opt/metasploit-framework/config/database.yml
            echo " password: Passw0rd " >> /opt/metasploit-framework/config/database.yml
            echo " host: 127.0.0.1 " >> /opt/metasploit-framework/config/database.yml
            echo " port: 5432 " >> /opt/metasploit-framework/config/database.yml
            echo " pool: 75 " >> /opt/metasploit-framework/config/database.yml
            echo " timeout: 5 " >> /opt/metasploit-framework/config/database.yml
            sudo sh -c "echo export MSF_DATABASE_CONFIG=/opt/metasploit-framework/config/database.yml >> /etc/profile"
            source /etc/profile
            service postgresql start
            update-rc.d postgresql enable
            bash
            __EOF__
            chmod +x /usr/share/misc/msf_install.sh
            echo 'alias msf="/usr/share/misc/msf_install.sh"' >> /etc/bash.bashrc
            
            cat > /usr/share/misc/msf_patch.sh << "__EOF__"
            # MSF SQL DATABASE PATCH
            # Patch must be pasted manually into shell interface
            cd /usr/share
            sudo -s
            su postgres
            createuser msf -P -S -R -D

            #paste code above this line FIRST (enter required password: Passw0rd)
            
            #/usr/share/misc/msf_patch.sh follows:
            
            createdb -O msf msf 
            exit

            echo "production:" > /opt/metasploit-framework/config/database.yml
            echo " adapter: postgresql" >> /opt/metasploit-framework/config/database.yml
            echo " database: msf " >> /opt/metasploit-framework/config/database.yml
            echo " username: msf " >> /opt/metasploit-framework/config/database.yml
            echo " password: Passw0rd" >> /opt/metasploit-framework/config/database.yml
            echo " host: 127.0.0.1" >> /opt/metasploit-framework/config/database.yml
            echo " port: 5432" >> /opt/metasploit-framework/config/database.yml
            echo " pool: 75" >> /opt/metasploit-framework/config/database.yml
            echo " timeout: 5" >> /opt/metasploit-framework/config/database.yml

            sudo sh -c "echo export MSF_DATABASE_CONFIG=/opt/metasploit-framework/config/database.yml >> /etc/profile"
            source /etc/profile
            service postgresql start
            update-rc.d postgresql enable
            bash
            __EOF__
            
            chmod +x /usr/share/misc/msf_patch.sh
            echo 'alias patch="/usr/share/misc/msf_patch.sh"' >> /etc/bash.bashrc
            source /etc/bash.bashrc
            easy_install pip
            pip install pefile capstone
            git clone https://github.com/g0tmi1k/exe2hex.git /usr/share/exe2hex
            git clone https://github.com/1aN0rmus/TekDefense-Automater.git /usr/share/automater
            git clone https://github.com/secretsquirrel/the-backdoor-factory.git /usr/share/backdoor
            git clone https://github.com/Veil-Framework/Veil.git /usr/share/veil
            /usr/share/Veil/setup/setup.sh -c
            git clone https://github.com/danielmiessler/SecLists.git /usr/share/seclists
            reboot
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW

  host2-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.2
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host2:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: lastname-Windows-7-SAMBA
          params:
            lastname: { get_param: last_name }
      image: Windows 7
      flavor: cy.large
      networks: 
        - port: { get_resource: host2-port }
      user_data: 
        str_replace:
          template: |
            #ps1_sysnative
            $ErrorActionPreference = 'SilentlyContinue'
            netsh advfirewall set allprofiles state off
            set-ItemProperty -Path 'HKLM:\Software\Microsoft\Windows\CurrentVersion\Policies\System' -name "dontdisplaylastusername" -Value 1
            net user /add $user $password /y
            net localgroup administrators /add $user
            exit 1001
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW

  host3-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.3
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host3:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: lastname-Debian-Headless
          params:
            lastname: { get_param: last_name }
      image: Debian Stretch
      flavor: cy.small
      networks: 
        - port: { get_resource: host3-port }
      user_data: 
        str_replace:
          template: |
            #!/bin/bash            
            echo 127.0.0.1 $(hostname) >> /etc/hosts
            export DEBIAN_FRONTEND=noninteractive
            useradd $user -m -U -s /bin/bash
            usermod -aG sudo $user
            sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
            echo "root:$password" | chpasswd
            echo "$user:$password" | chpasswd
            reboot
          params:
            $user: { get_param: last_name }
            $password: { get_param: password }
            $studentID: { get_param: student_id }
      user_data_format: RAW
      
  host4-port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: stu-network }
      fixed_ips:
        - subnet_id: { get_resource: stu-subnet }
          ip_address:
            str_replace:
              template: 10.studentID.0.4
              params:
                studentID: { get_param: student_id }
      port_security_enabled: false

  host4:
    type: OS::Nova::Server
    properties:
      name:
        str_replace:
          template: lastname-Windows-XP
          params:
            lastname: { get_param: last_name }
      image: Windows XP
      flavor: cy.medium
      networks: 
        - port: { get_resource: host4-port }
      user_data: 
        str_replace:
          template: |
            net user /add Bill DoDC0mPL1antPssW0rd!! /y
            net localgroup administrators /add Bill
            net user /add Susan RediculaslyLongPassWordOMG!! /y
            net user /add Robert PassWord123 /y
      user_data_format: RAW
